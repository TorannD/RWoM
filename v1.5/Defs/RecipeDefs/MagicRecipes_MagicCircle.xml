<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <!--================== Magic Circle - Magic Recipes ==================-->
  
  <TorannMagic.MagicRecipeDef Name="TM_MagicRecipeBase" Abstract="True">
	<workSkillLearnFactor>0</workSkillLearnFactor>
	<soundWorking>TM_VibrationLow</soundWorking>
	<recipeUsers>
		<li>TableMagicCircle</li>
	</recipeUsers>	
  </TorannMagic.MagicRecipeDef>
  
  <!-- WorkAmount is performed at 6,000/s while circle is active; not recommended to have value below 20,000 -->
  <!-- TM_HeatWaveMR example contains all possible fields with default values
  mageCount can be any value, but there is only designated room for 6 mages, 3 for the focus point (small circle)
  manaCost is divided by mageCount to determine how much mana each mage must have to perform the ritual; this is the amount of mana subtracted following the ritual -->  
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_HeatWaveMR</defName>
    <label>Alteration: heatwave</label>
    <description>A heat wave envelops the map
Casters: 3
Mana: 50 ea.
Fail chance: 5%
Fail backlash: 0</description>
    <jobString>summoning heat wave</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.5</manaCost>
    <workAmount>30000</workAmount>
	<failChance>.05</failChance>
	<failManaConsumed>.5</failManaConsumed>
	<failDamageApplied>0</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>100</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>WoodLog</li>
          </thingDefs>
        </filter>
        <count>200</count>
      </li>
    </ingredients>
    <products>
	<!-- Enter produced products here; can also use spawn things -->
    </products>
	<!-- result conditions should only be used to affect existing conditions
	make them permanent, control the duration or remove them 
	creating events uses result incident -->
	<resultConditions>
	  <li>
		<resultCondition></resultCondition>
		<conditionPermanent>false</conditionPermanent>
		<conditionDuration>-1</conditionDuration> <!-- if reduce and increase are false, sets active condition to this duration, otherwise adjust by this duration -->
		<conditionRemove>false</conditionRemove>
		<conditionAdd>false</conditionAdd> 			<!-- adds a new condition, if resultCondition is null adds a random condition; set to true when creating a new condition -->
		<conditionReduceByDuration>false</conditionReduceByDuration>
		<conditionIncreaseByDuration>false</conditionIncreaseByDuration>
		<conditionRandom>false</conditionRandom> <!-- if true, applies effects to a random map condition if resultCondition is null -->
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
		<resultWeather></resultWeather> <!-- changes the weather on the map to this weatherDef -->
	  </li>
	</resultConditions>
	<!-- resultIncident is the defName of the incident to generate
	countRange can be used to cause the same incident to trigger multiple times
	incidentPoints can be used to force the storyteller points used in the incident, otherwise it uses points scaled to the storyteller -->
	<resultIncidents>
	  <li>
		<resultIncident>HeatWave</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultIncidents>
	<selectRandomIncident>false</selectRandomIncident>		<!-- performs all incidents in result incidents if false -->
	<selectRandomIncidentCount>0</selectRandomIncidentCount>   <!-- if random incident is selected, selects and performs a random incident this many times -->
	<!-- resultHediff generates hediffs on pawns across the map
	leave maxHediffCount = 0 if the hediff should apply to all spawned pawns meeting apply criteria -->
	<resultHediffs>
	  <li>
		<resultHediff></resultHediff>
		<checkResistance>false</checkResistance>
		<maxHediffCount>0</maxHediffCount>
		<hediffSeverity>.5</hediffSeverity>
		<applyFriendly>false</applyFriendly>
		<applyEnemy>false</applyEnemy>
		<applyNeutral>false</applyNeutral>
		<applyNullFaction>false</applyNullFaction>
		<moteDef></moteDef>
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultHediffs>
	<!-- resultSpawnThings creates things at the center of the circle
	can be used to create a temporary summoned creature -->
	<resultSpawnThings>
	  <li>
		<resultSpawnThing></resultSpawnThing>
		<resultPawnKindDef></resultPawnKindDef> <!-- must have a kinddef for pawn types -->
		<spawnThingCount>0</spawnThingCount>
		<spawnThingStackCount>1</spawnThingStackCount>
		<summonDuration>0</summonDuration>		<!-- only applies to summoned things -->
		<summonTemporary>true</summonTemporary> <!-- only applies to summoned things -->
		<spawnHostile>false</spawnHostile>  <!-- attempts to spawn thing with a hostile faction -->
	  </li>
	</resultSpawnThings>	
	<resultMapComponentConditions>	<!-- hard coded game conditions -->
	  <li></li>
	</resultMapComponentConditions>
	<mapComponentConditionValue></mapComponentConditionValue> <!-- assigned value or points (float) to certain conditions -->
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_ColdSnapMR</defName>
    <label>Alteration: cold snap</label>
    <description>A cold snap envelops the map
Casters: 3
Mana: 50 ea.
Fail chance: 5%
Fail backlash: 0</description>
    <jobString>summoning cold wave</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.5</manaCost>
    <workAmount>30000</workAmount>
	<failChance>.05</failChance>
	<failManaConsumed>.5</failManaConsumed>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>100</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Steel</li>
          </thingDefs>
        </filter>
        <count>200</count>
      </li>
    </ingredients>
    <products>
    </products>
	<resultIncidents>
	  <li>
		<incidentPoints>0</incidentPoints>
		<resultIncident>ColdSnap</resultIncident>
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultIncidents>	
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_NameWindMR</defName>
    <label>Alteration: name of the wind</label>
    <description>causes high wind speeds across the map for several days
Casters: 1
Mana: 40 ea.
Fail chance: 10%
Fail backlash: 6</description>
    <jobString>summoning wind</jobString>
	<mageCount>1</mageCount>
	<manaCost>.4</manaCost>
    <workAmount>45000</workAmount>
	<failChance>.1</failChance>
	<failManaConsumed>.25</failManaConsumed>
	<failDamageApplied>6</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>50</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>WoodLog</li>
          </thingDefs>
        </filter>
        <count>100</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Steel</li>
          </thingDefs>
        </filter>
        <count>50</count>
      </li>
    </ingredients>    	
	<resultMapComponentConditions>	<!-- hard coded game conditions -->
	  <li>NameOfTheWind</li>
	</resultMapComponentConditions>
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>	
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_PsychicSootheMR</defName>
    <label>Alteration: psychic soothe</label>
    <description>Create soothing psychic emanations
Casters: 3
Mana: 50 ea.
Fail chance: 25%
Fail backlash: 10</description>
    <jobString>creating psychic soothe</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.5</manaCost>
    <workAmount>50000</workAmount>
	<failChance>.25</failChance>
	<failManaConsumed>.5</failManaConsumed>
	<failDamageApplied>10</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>125</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Silver</li>
          </thingDefs>
        </filter>
        <count>50</count>
      </li>
    </ingredients>
    <products>
	<!-- Enter produced products here; can also use spawn things -->
    </products>
	<resultIncidents>
	  <li>
		<resultIncident>PsychicSoothe</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultIncidents>	
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_HealingRainMR</defName>
    <label>Alteration: healing rain</label>
    <description>The map is washed in healing rain
Casters: 1
Mana: 60 ea.
Fail chance: 20%
Fail backlash: 10</description>
    <jobString>forming healing rain</jobString>
	<mageCount>1</mageCount>
	<manaCost>.6</manaCost>
    <workAmount>80000</workAmount>
	<failChance>.20</failChance>
	<failManaConsumed>.6</failManaConsumed>
	<failDamageApplied>10</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>150</count>
      </li>
	  	  <li>
        <filter>
          <thingDefs>
            <li>Silver</li>
          </thingDefs>
        </filter>
        <count>25</count>
      </li>
    </ingredients>    
	<!-- result conditions should only be used to affect existing conditions
	make them permanent, control the duration or remove them 
	creating events uses result incident -->
	<resultConditions>
	  <li>
		<resultWeather>TM_HealingRainWD</resultWeather> <!-- changes the weather on the map to this weatherDef -->
	  </li>
	</resultConditions>	
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>	
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_NaturesGiftMR</defName>
    <label>Alteration: nature's gift</label>
    <description>Causes random events to occur
Casters: 3
Mana: 40 ea.
Fail chance: 25%
Fail backlash: 12</description>
    <jobString>altering event chance</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.2</manaCost>
    <workAmount>60000</workAmount>
	<failChance>.25</failChance>
	<failManaConsumed>.75</failManaConsumed>
	<failDamageApplied>12</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>250</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Silver</li>
          </thingDefs>
        </filter>
        <count>30</count>
      </li>
    </ingredients>	
	<!-- resultIncident is the defName of the incident to generate
	countRange can be used to cause the same incident to trigger multiple times
	incidentPoints can be used to force the storyteller points used in the incident, otherwise it uses points scaled to the storyteller -->
	<resultIncidents>
	  <li>
		<resultIncident>GiveQuest_Random</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>Eclipse</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>SolarFlare</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>Aurora</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>AnimalInsanitySingle</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>ResourcePodCrash</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>SelfTame</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>AmbrosiaSprout</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>FarmAnimalsWanderIn</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>WandererJoin</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>RefugeePodCrash</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>ThrumboPasses</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>MeteoriteImpact</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>HerdMigration</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>Flashstorm</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>CropBlight</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultIncidents>
	<selectRandomIncident>true</selectRandomIncident>		<!-- performs all incidents in result incidents if false -->
	<selectRandomIncidentCount>1</selectRandomIncidentCount>   <!-- if random incident is selected, selects and performs a random incident this many times -->	
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_CallOfTheWildMR</defName>
    <label>Alteration: call of the wild</label>
    <description>Draws the attention of wild animals
Casters: 2
Mana: 60 ea.
Fail chance: 20%
Fail backlash: 12</description>
    <jobString>altering event chance</jobString>
	<mageCount>2</mageCount>
	<manaCost>1.2</manaCost>
    <workAmount>50000</workAmount>
	<failChance>.20</failChance>
	<failManaConsumed>.6</failManaConsumed>
	<failDamageApplied>12</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>200</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Gold</li>
          </thingDefs>
        </filter>
        <count>3</count>
      </li>
    </ingredients>	
	<!-- resultIncident is the defName of the incident to generate
	countRange can be used to cause the same incident to trigger multiple times
	incidentPoints can be used to force the storyteller points used in the incident, otherwise it uses points scaled to the storyteller -->
	<resultIncidents>	  
	  <li>
		<resultIncident>SelfTame</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	 
	  <li>
		<resultIncident>SelfTame</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>2</min>
		  <max>2</max>
		</countRange>
	  </li>	 	  
	  <li>
		<resultIncident>HerdMigration</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	 
	  <li>
		<resultIncident>HerdMigration</resultIncident>
		<incidentPoints>400</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>3</max>
		</countRange>
	  </li>	
	  <li>
		<resultIncident>HerdMigration</resultIncident>
		<incidentPoints>1000</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>2</max>
		</countRange>
	  </li>	
	  <li>
		<resultIncident>HerdMigration</resultIncident>
		<incidentPoints>2500</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	
	  <li>
		<resultIncident>HerdMigration</resultIncident>
		<incidentPoints>5000</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>		  
	  <li>
		<resultIncident>WildManWandersIn</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	
	</resultIncidents>
	<selectRandomIncident>true</selectRandomIncident>		<!-- performs all incidents in result incidents if false -->
	<selectRandomIncidentCount>2</selectRandomIncidentCount>   <!-- if random incident is selected, selects and performs a random incident this many times -->	
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_TerrestrialBeaconMR</defName>
    <label>Alteration: terrestrial beacon</label>
    <description>Alters the flight path of falling objects to land nearby
Casters: 2
Mana: 60 ea.
Fail chance: 25%
Fail backlash: 12</description>
    <jobString>altering event chance</jobString>
	<mageCount>2</mageCount>
	<manaCost>1.2</manaCost>
    <workAmount>50000</workAmount>
	<failChance>.25</failChance>
	<failManaConsumed>.75</failManaConsumed>
	<failDamageApplied>12</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>150</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Silver</li>
          </thingDefs>
        </filter>
        <count>20</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Steel</li>
          </thingDefs>
        </filter>
        <count>70</count>
      </li>
    </ingredients>	
	<!-- resultIncident is the defName of the incident to generate
	countRange can be used to cause the same incident to trigger multiple times
	incidentPoints can be used to force the storyteller points used in the incident, otherwise it uses points scaled to the storyteller -->
	<resultIncidents>	  
	  <li>
		<resultIncident>ResourcePodCrash</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	  
	  <li>
		<resultIncident>ResourcePodCrash</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultIncident>RefugeePodCrash</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	  
	  <li>
		<resultIncident>MeteoriteImpact</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	
	  <li>
		<resultIncident>MeteoriteImpact</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	
	  <li>
		<resultIncident>MeteoriteImpact</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>		
	  <li>
		<resultIncident>DefoliatorShipPartCrash</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	  
	  <li>
		<resultIncident>PsychicEmanatorShipPartCrash</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->		
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultIncidents>
	<selectRandomIncident>true</selectRandomIncident>		<!-- performs all incidents in result incidents if false -->
	<selectRandomIncidentCount>1</selectRandomIncidentCount>   <!-- if random incident is selected, selects and performs a random incident this many times -->	
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_MeteorFallMR</defName>
    <label>Conjuration: attract meteors</label>
    <description>Causes multiple meteors to impact nearby
Casters: 3
Mana: 60 ea.
Fail chance: 15%
Fail backlash: 0</description>
    <jobString>summoning meteors</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.8</manaCost>
    <workAmount>50000</workAmount>
	<failChance>.12</failChance>
	<failManaConsumed>.6</failManaConsumed>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>150</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Steel</li>
          </thingDefs>
        </filter>
        <count>150</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Silver</li>
          </thingDefs>
        </filter>
        <count>40</count>
      </li>
    </ingredients>
    <products>
    </products>
	<resultIncidents>
	  <li>
		<incidentPoints>0</incidentPoints>
		<resultIncident>MeteoriteImpact</resultIncident>
		<countRange>
			<min>5</min>
			<max>8</max>
		</countRange>
	  </li>
	</resultIncidents>	
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_CreateSkeletonMR</defName>
    <label>Conjuration: skeleton</label>
    <description>Creates an animated skeleton from a single corpses; the skeleton will defend the colony for 5 days or until destroyed.
Casters: 1
Mana: 50 ea.
Fail chance: 10%
Fail backlash: 8</description>
    <jobString>animating skeleton</jobString>
	<mageCount>1</mageCount>
	<manaCost>.5</manaCost>
    <workAmount>40000</workAmount>
	<failChance>.10</failChance>
	<failManaConsumed>.5</failManaConsumed>
	<failDamageApplied>8</failDamageApplied>
	<allowMixingIngredients>true</allowMixingIngredients>
    <ingredients>
      <li>
        <filter>
          <categories>
            <li>CorpsesHumanlike</li>
          </categories>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <categories>
        <li>CorpsesHumanlike</li>
      </categories>
      <disallowedCategories>
        <li>CorpsesMechanoid</li>
      </disallowedCategories>
    </fixedIngredientFilter>
    <defaultIngredientFilter>
	  <categories>
        <li>CorpsesHumanlike</li>
      </categories>
      <specialFiltersToAllow>
        <li>AllowCorpsesColonist</li>
        <li>AllowCorpsesStranger</li>
		<li>AllowRotten</li>
      </specialFiltersToAllow>
    </defaultIngredientFilter>
    <products>
    </products>
	<resultSpawnThings>
	  <li>
		<resultSpawnThing>TM_SkeletonR</resultSpawnThing>
		<resultPawnKindDef>TM_Skeleton</resultPawnKindDef> <!-- must have a kinddef for pawn types -->
		<spawnThingCount>1</spawnThingCount>
		<spawnThingStackCount>1</spawnThingStackCount>
		<summonDuration>300000</summonDuration>
		<summonTemporary>true</summonTemporary>
		<spawnHostile>false</spawnHostile>  <!-- attempts to spawn thing with a hostile faction -->
		<countRange>
			<min>1</min>
			<max>1</max>
		</countRange>
	  </li>
	</resultSpawnThings>
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>	
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_CreateGiantSkeletonMR</defName>
    <label>Conjuration: giant skeleton</label>
    <description>Creates a giant, animated skeleton from a pile of corpses; the skeleton will defend the colony for 5 days or until destroyed.
Casters: 4
Mana: 50 ea.
Fail chance: 25%
Fail backlash: 12</description>
    <jobString>animating skeleton</jobString>
	<mageCount>4</mageCount>
	<manaCost>2</manaCost>
    <workAmount>80000</workAmount>
	<failChance>.25</failChance>
	<failManaConsumed>.6</failManaConsumed>
	<failDamageApplied>12</failDamageApplied>
	<allowMixingIngredients>true</allowMixingIngredients>
    <ingredients>
      <li>
        <filter>
          <categories>
            <li>CorpsesHumanlike</li>
          </categories>
        </filter>
        <count>4</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <categories>
        <li>CorpsesHumanlike</li>
      </categories>
      <disallowedCategories>
        <li>CorpsesMechanoid</li>
      </disallowedCategories>
    </fixedIngredientFilter>
    <defaultIngredientFilter>
	  <categories>
        <li>CorpsesHumanlike</li>
      </categories>
      <specialFiltersToAllow>
        <li>AllowCorpsesColonist</li>
        <li>AllowCorpsesStranger</li>
		<li>AllowRotten</li>
      </specialFiltersToAllow>
    </defaultIngredientFilter>
    <products>
    </products>
	<resultSpawnThings>
	  <li>
		<resultSpawnThing>TM_GiantSkeletonR</resultSpawnThing>
		<resultPawnKindDef>TM_GiantSkeleton</resultPawnKindDef> <!-- must have a kinddef for pawn types -->
		<spawnThingCount>1</spawnThingCount>
		<spawnThingStackCount>1</spawnThingStackCount>
		<summonDuration>300000</summonDuration>
		<summonTemporary>true</summonTemporary>
		<spawnHostile>false</spawnHostile>  <!-- attempts to spawn thing with a hostile faction -->
		<countRange>
			<min>1</min>
			<max>1</max>
		</countRange>
	  </li>
	</resultSpawnThings>
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_SummonSpiritMR</defName>
    <label>Conjuration: possessor spirit</label>
    <description>Summons a wandering spirit.
Casters: 3
Mana: 40 ea.
Fail chance: 25%
Fail backlash: 15</description>
    <jobString>summoning spirit</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.2</manaCost>
    <workAmount>100000</workAmount>
	<failChance>.25</failChance>
	<failManaConsumed>.6</failManaConsumed>
	<failDamageApplied>15</failDamageApplied>
     <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>300</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Silver</li>
          </thingDefs>
        </filter>
        <count>50</count>
      </li>
    </ingredients>
    <products>
    </products>
	<resultSpawnThings>
	  <li>
		<resultSpawnThing>TM_SpiritTD</resultSpawnThing>
		<resultPawnKindDef>TM_SpiritPKD</resultPawnKindDef> <!-- must have a kinddef for pawn types -->
		<spawnThingCount>1</spawnThingCount>
		<spawnThingStackCount>1</spawnThingStackCount>
		<summonTemporary>false</summonTemporary>
		<spawnHostile>false</spawnHostile>  <!-- attempts to spawn thing with a hostile faction -->
		<countRange>
			<min>1</min>
			<max>1</max>
		</countRange>
	  </li>
	</resultSpawnThings>	
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>	
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_RuunbledMR</defName>
    <label>Conjuration: mystic weapon</label>
    <description>Summons a mystic weapon
Casters: 3
Mana: 60 ea.
Fail chance: 50%
Fail backlash: 10</description>
    <jobString>summoning a mystic weapon</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.8</manaCost>
    <workAmount>80000</workAmount>
	<failChance>.5</failChance>
	<failManaConsumed>.8</failManaConsumed>
	<failDamageApplied>10</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>500</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>TM_ThrumboAxe</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>TM_ThrumboSaber</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>    
	<!-- resultSpawnThings creates things at the center of the circle
	can be used to create a temporary summoned creature -->
	<resultSpawnThings>
	  <li>
		<resultSpawnThing>TM_Ruunbled</resultSpawnThing>
		<resultPawnKindDef></resultPawnKindDef> <!-- must have a kinddef for pawn types -->
		<spawnThingCount>1</spawnThingCount>
		<spawnThingStackCount>1</spawnThingStackCount>
		<summonDuration>0</summonDuration>		<!-- only applies to summoned things -->
		<summonTemporary>false</summonTemporary> <!-- only applies to summoned things -->
		<spawnHostile>false</spawnHostile>  <!-- attempts to spawn thing with a hostile faction -->
	  </li>
	</resultSpawnThings>	
  </TorannMagic.MagicRecipeDef>

  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_ArcaneAugmentationMR</defName>
    <label>Enchantment: arcane augmentation</label>
    <description>Applies numerous arcane buffs to colonists.
Casters: 3
Target max: 10
Mana: 40 ea.
Fail chance: 15%
Fail backlash: 6</description>
    <jobString>applying arcane augmentations</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.2</manaCost>
    <workAmount>80000</workAmount>
	<failChance>.15</failChance>
	<failManaConsumed>.25</failManaConsumed>
	<failDamageApplied>6</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>150</count>
      </li>
    </ingredients>
    <products>
    </products>
	<resultHediffs>
	  <li>
		<resultHediff>TM_Movement</resultHediff>
		<maxHediffCount>10</maxHediffCount>
		<hediffSeverity>10</hediffSeverity>
		<applyFriendly>true</applyFriendly>
		<applyEnemy>false</applyEnemy>
		<applyNeutral>false</applyNeutral>
		<applyNullFaction>false</applyNullFaction>
		<moteDef>Mote_Arcane</moteDef>
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultHediff>TM_Manipulation</resultHediff>
		<maxHediffCount>10</maxHediffCount>
		<hediffSeverity>10</hediffSeverity>
		<applyFriendly>true</applyFriendly>
		<applyEnemy>false</applyEnemy>
		<applyNeutral>false</applyNeutral>
		<applyNullFaction>false</applyNullFaction>
		<moteDef>Mote_Arcane</moteDef>
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultHediff>TM_Breathing</resultHediff>
		<maxHediffCount>10</maxHediffCount>
		<hediffSeverity>10</hediffSeverity>
		<applyFriendly>true</applyFriendly>
		<applyEnemy>false</applyEnemy>
		<applyNeutral>false</applyNeutral>
		<applyNullFaction>false</applyNullFaction>
		<moteDef>Mote_Arcane</moteDef>
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	  <li>
		<resultHediff>TM_Sight</resultHediff>
		<maxHediffCount>10</maxHediffCount>
		<hediffSeverity>10</hediffSeverity>
		<applyFriendly>true</applyFriendly>
		<applyEnemy>false</applyEnemy>
		<applyNeutral>false</applyNeutral>
		<applyNullFaction>false</applyNullFaction>
		<moteDef>Mote_Arcane</moteDef>
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultHediffs>
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_BlightWildlifeMR</defName>
    <label>Enchantment: blight wildlife</label>
    <description>Blights all wildlife with the plague.
Casters: 3
Mana: 40 ea.
Fail chance: 15%
Fail backlash: 6</description>
    <jobString>hexing wildlife</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.2</manaCost>
    <workAmount>80000</workAmount>
	<failChance>.15</failChance>
	<failManaConsumed>.25</failManaConsumed>
	<failDamageApplied>6</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>150</count>
      </li>
    </ingredients>
    <products>
    </products>
	<resultHediffs>
	  <li>
		<resultHediff>Animal_Plague</resultHediff>
		<maxHediffCount>0</maxHediffCount>
		<hediffSeverity>.1</hediffSeverity>
		<applyFriendly>false</applyFriendly>
		<applyEnemy>false</applyEnemy>
		<applyNeutral>false</applyNeutral>
		<applyNullFaction>true</applyNullFaction>
		<moteDef>Mote_Arcane</moteDef>
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>	  
	</resultHediffs>
  </TorannMagic.MagicRecipeDef> 

  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_BeastialRageMR</defName>
    <label>Enchantment: predator's rage</label>
    <description>Enrage predator beasts on the map and nudge their rage towards your enemies.
Casters: 2
Mana: 40 ea.
Fail chance: 35%
Fail backlash: 10</description>
    <jobString>enraging predators</jobString>
	<mageCount>2</mageCount>
	<manaCost>.8</manaCost>
    <workAmount>60000</workAmount>
	<failChance>.35</failChance>
	<failManaConsumed>.5</failManaConsumed>
	<failDamageApplied>10</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>100</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>DevilstrandCloth</li>
          </thingDefs>
        </filter>
        <count>50</count>
      </li>
    </ingredients>
	<!-- result conditions should only be used to affect existing conditions
	make them permanent, control the duration or remove them 
	creating events uses result incident -->
	<resultConditions>
	  <li>
		<resultCondition>TargetedPredatorInsanity</resultCondition>
		<conditionPermanent>false</conditionPermanent>
		<conditionDuration>10</conditionDuration> <!-- if reduce and increase are false, sets active condition to this duration, otherwise adjust by this duration -->
		<conditionRemove>false</conditionRemove>
		<conditionAdd>false</conditionAdd> 			<!-- adds a new condition, if resultCondition is null adds a random condition; set to true when creating a new condition -->
		<conditionReduceByDuration>false</conditionReduceByDuration>
		<conditionIncreaseByDuration>false</conditionIncreaseByDuration>
		<conditionRandom>false</conditionRandom> <!-- if true, applies effects to a random map condition if resultCondition is null -->
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
		<resultWeather></resultWeather> <!-- changes the weather on the map to this weatherDef -->
	  </li>
	</resultConditions>	
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_ArcaneInspirationMR</defName>
    <label>Enchantment: arcane inspiration</label>
    <description>searches arcane revelations for inspiration
Casters: 1
Mana: 50 ea.
Fail chance: 15%
Fail backlash: 6</description>
    <jobString>delving into the arcane</jobString>
	<mageCount>1</mageCount>
	<manaCost>.5</manaCost>
    <workAmount>10000</workAmount>
	<failChance>.15</failChance>
	<failManaConsumed>.5</failManaConsumed>
	<failDamageApplied>6</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>100</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Jade</li>
          </thingDefs>
        </filter>
        <count>40</count>
      </li>
    </ingredients>    	
	<resultMapComponentConditions>	<!-- hard coded game conditions -->
	  <li>ArcaneInspiration</li>	<!-- assigns inspirations for 1-3 colonists -->
	</resultMapComponentConditions>
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>	
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_DivineBlessingMR</defName>
    <label>Enchantment: divine blessing</label>
    <description>Beseech a higher power to show mercy to ailing pawns
Casters: 3
Mana: 60 ea.
Fail chance: 40%
Fail backlash: 0</description>
    <jobString>seeking divine blessing</jobString>
	<mageCount>3</mageCount>
	<manaCost>1.8</manaCost>
    <workAmount>60000</workAmount>
	<failChance>.40</failChance>
	<failManaConsumed>.3</failManaConsumed>
	<failDamageApplied>0</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>RawMagicyte</li>
          </thingDefs>
        </filter>
        <count>100</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Uranium</li>
          </thingDefs>
        </filter>
        <count>40</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>Silver</li>
          </thingDefs>
        </filter>
        <count>30</count>
      </li>
    </ingredients>
	<!-- result conditions should only be used to affect existing conditions
	make them permanent, control the duration or remove them 
	creating events uses result incident -->
	<resultConditions>
	  <li>
		<resultCondition>DivineBlessing</resultCondition>
		<conditionPermanent>false</conditionPermanent>
		<conditionDuration>10</conditionDuration> <!-- if reduce and increase are false, sets active condition to this duration, otherwise adjust by this duration -->
		<conditionRemove>false</conditionRemove>
		<conditionAdd>false</conditionAdd> 			<!-- adds a new condition, if resultCondition is null adds a random condition; set to true when creating a new condition -->
		<conditionReduceByDuration>false</conditionReduceByDuration>
		<conditionIncreaseByDuration>false</conditionIncreaseByDuration>
		<conditionRandom>false</conditionRandom> <!-- if true, applies effects to a random map condition if resultCondition is null -->
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
		<resultWeather></resultWeather> <!-- changes the weather on the map to this weatherDef -->
	  </li>
	</resultConditions>	
	<recipeUsers>
		<li>TableSmallMagicCircle</li>
	</recipeUsers>
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_SummonDemonMR</defName>
    <label>Conjuration: summon demon *challenge*</label>
    <description>Combat a demonic enemy
Casters: 6
Mana: 40 ea.
Fail chance: 20%
Fail backlash: 20</description>
    <jobString>summoning demon</jobString>
	<mageCount>6</mageCount>
	<manaCost>2.4</manaCost>
    <workAmount>100000</workAmount>
	<failChance>.2</failChance>
	<failManaConsumed>.8</failManaConsumed>
	<failDamageApplied>20</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>GemstoneOfInsight_Might</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>DevilstrandCloth</li>
          </thingDefs>
        </filter>
        <count>100</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>TM_Manaweave</li>
          </thingDefs>
        </filter>
        <count>100</count>
      </li>
    </ingredients>
	<!-- resultIncident is the defName of the incident to generate
	countRange can be used to cause the same incident to trigger multiple times
	incidentPoints can be used to force the storyteller points used in the incident, otherwise it uses points scaled to the storyteller -->
	<resultIncidents>
	  <li>
		<resultIncident>DemonAssault</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultIncidents>	
	<resultMapComponentConditions>	<!-- hard coded game conditions -->
	  <li>AllowAllIncidents</li>
	</resultMapComponentConditions>
  </TorannMagic.MagicRecipeDef>
  
  <TorannMagic.MagicRecipeDef ParentName="TM_MagicRecipeBase">
    <defName>TM_SummonWanderingLichMR</defName>
    <label>Conjuration: summon wandering lich *challenge*</label>
    <description>Draw the attention of a wandering lich
Casters: 6
Mana: 40 ea.
Fail chance: 20%
Fail backlash: 20</description>
    <jobString>summoning lich</jobString>
	<mageCount>6</mageCount>
	<manaCost>2.4</manaCost>
    <workAmount>100000</workAmount>
	<failChance>.2</failChance>
	<failManaConsumed>.8</failManaConsumed>
	<failDamageApplied>20</failDamageApplied>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>GemstoneOfInsight_Magic</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
	  <li>
        <filter>
          <thingDefs>
            <li>TM_Arcalleum</li>
          </thingDefs>
        </filter>
        <count>250</count>
      </li>
    </ingredients>
	<!-- resultIncident is the defName of the incident to generate
	countRange can be used to cause the same incident to trigger multiple times
	incidentPoints can be used to force the storyteller points used in the incident, otherwise it uses points scaled to the storyteller -->
	<resultIncidents>
	  <li>
		<resultIncident>WanderingLich</resultIncident>
		<incidentPoints>0</incidentPoints>
		<incidentHostile>false</incidentHostile> <!-- attempts to create the incident with hostile parameters if true -->
		<countRange>
		  <min>1</min>
		  <max>1</max>
		</countRange>
	  </li>
	</resultIncidents>	
	<resultMapComponentConditions>	<!-- hard coded game conditions -->
	  <li>AllowAllIncidents</li>
	</resultMapComponentConditions>
  </TorannMagic.MagicRecipeDef>

</Defs>
